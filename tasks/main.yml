---
- name: download HBase
  get_url:
    url: "http://apache-mirror.rbc.ru/pub/apache/hbase/{{ hbase_version }}/hbase-{{ hbase_version }}{{ hadoop_suffix }}-bin.tar.gz"
    dest: /root/hbase-{{ hbase_version }}{{ hadoop_suffix }}-bin.tar.gz
    checksum: "{{ hbase_checksum_algo }}:{{ hbase_checksum }}"
  ignore_errors: true
  register: result

- name: try to get hbase from archive site if original one returns 404
  get_url:
    url: "http://archive.apache.org/dist/hbase/{{ hbase_version }}/hbase-{{ hbase_version }}{{ hadoop_suffix }}-bin.tar.gz"
    dest: /root/hbase-{{ hbase_version }}{{ hadoop_suffix }}-bin.tar.gz
    checksum: "{{ hbase_checksum_algo }}:{{ hbase_checksum }}"
  when: result is failed and result.status_code is defined and result.status_code == 404

- name: unpack HBase
  unarchive: copy=no src="/root/hbase-{{ hbase_version }}{{ hadoop_suffix }}-bin.tar.gz" dest={{ hbase_unarchive_prefix }}

- name: create {{ hbase_distr_prefix }}
  shell: rsync -av --exclude=conf/ {{ hbase_unarchive_prefix }}/hbase-{{ hbase_version }}{{ hadoop_suffix }}/ {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/ creates="{{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}"

- name: create a -current link
  file: state=link src={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }} dest={{ hbase_distr_prefix }}-{{ env_name }}-current

- name: add Hadoop user
  user: name={{ hadoop_user }} shell=/usr/sbin/nologin state=present

- name: make {{ hbase_var_prefix }}
  file: path={{ hbase_var_prefix }} state=directory owner={{ hadoop_user }} group={{ hadoop_user }} mode=0700

- name: make {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf
  file: path={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf state=directory owner=root group=root mode=0755

- name: make /etc/hbase-{{ env_name }}
  file: path=/etc/hbase-{{ env_name }} state=directory owner=root group=root mode=0755

- name: put /etc/hbase-{{ env_name }}/hbase-site.xml
  template: src=hbase-site.xml dest=/etc/hbase-{{ env_name }}/hbase-site.xml owner=root group=root mode=0644 backup=yes
  register: hbase_site_xml
  when: not hbase_standalone

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hbase-site.xml
  file: state=link src=/etc/hbase-{{ env_name }}/hbase-site.xml dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hbase-site.xml
  when: not hbase_standalone

- name: put "/etc/hbase-{{ env_name }}/hbase-env.sh"
  template: src=hbase-env.sh dest=/etc/hbase-{{ env_name }}/hbase-env.sh owner=root group=root mode=0644 backup=yes

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hbase-env.sh
  file: state=link src=/etc/hbase-{{ env_name }}/hbase-env.sh dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hbase-env.sh
  when: not hbase_standalone

- name: put "/etc/hbase-{{ env_name }}/hbase-policy.xml"
  template: src=hbase-policy.xml dest=/etc/hbase-{{ env_name }}/hbase-policy.xml owner=root group=root mode=0644 backup=yes

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hbase-policy.xml
  file: state=link src=/etc/hbase-{{ env_name }}/hbase-policy.xml dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hbase-policy.xml
  when: not hbase_standalone

- name: put "/etc/hbase-{{ env_name }}/log4j.properties"
  template: src=log4j.properties dest=/etc/hbase-{{ env_name }}/log4j.properties owner=root group=root mode=0644 backup=yes

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/log4j.properties
  file: state=link src=/etc/hbase-{{ env_name }}/log4j.properties dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/log4j.properties
  when: not hbase_standalone

- name: put "/etc/hbase-{{ env_name }}/hadoop-metrics2-hbase.properties"
  template: src=hadoop-metrics2-hbase.properties dest=/etc/hbase-{{ env_name }}/hadoop-metrics2-hbase.properties owner=root group=root mode=0644 backup=yes
  when: not hbase_standalone

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hadoop-metrics2-hbase.properties
  file: state=link src=/etc/hbase-{{ env_name }}/hadoop-metrics2-hbase.properties dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hadoop-metrics2-hbase.properties
  when: not hbase_standalone

- name: put /etc/hbase-{{ env_name }}/hadoop-metrics2-phoenix.properties
  template: src=hadoop-metrics2-phoenix.properties dest=/etc/hbase-{{ env_name }}/hadoop-metrics2-phoenix.properties owner=root group=root mode=0644 backup=yes
  when: phoenix_tracing_enabled

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hadoop-metrics2-phoenix.properties
  file: state=link src=/etc/hbase-{{ env_name }}/hadoop-metrics2-phoenix.properties dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hadoop-metrics2-phoenix.properties
  when: not hbase_standalone and phoenix_tracing_enabled

- name: create /etc/hbase-{{ env_name }}/hdfs-site.xml
  file: state=link src=/etc/hadoop-{{ env_name }}/hdfs-site.xml dest=/etc/hbase-{{ env_name }}/hdfs-site.xml
  when: not hbase_standalone

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hdfs-site.xml
  file: state=link src=/etc/hbase-{{ env_name }}/hdfs-site.xml dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hdfs-site.xml
  when: not hbase_standalone

- name: create /etc/hbase-{{ env_name }}/core-site.xml
  file: state=link src=/etc/hadoop-{{ env_name }}/core-site.xml dest=/etc/hbase-{{ env_name }}/core-site.xml
  when: not hbase_standalone

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/core-site.xml
  file: state=link src=/etc/hbase-{{ env_name }}/core-site.xml dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/core-site.xml
  when: not hbase_standalone

- name: create /etc/hbase-{{ env_name }}/mapred-site.xml
  file: state=link src=/etc/hadoop-{{ env_name }}/mapred-site.xml dest=/etc/hbase-{{ env_name }}/mapred-site.xml
  when: not hbase_standalone

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/mapred-site.xml
  file: state=link src=/etc/hbase-{{ env_name }}/mapred-site.xml dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/mapred-site.xml
  when: not hbase_standalone

- name: create /etc/hbase-{{ env_name }}/yarn-site.xml
  file: state=link src=/etc/hadoop-{{ env_name }}/yarn-site.xml dest=/etc/hbase-{{ env_name }}/yarn-site.xml
  when: not hbase_standalone

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/yarn-site.xml
  file: state=link src=/etc/hbase-{{ env_name }}/yarn-site.xml dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/yarn-site.xml
  when: not hbase_standalone

- name: create /etc/hbase-{{ env_name }}/hadoop-metrics.properties
  file: state=link src=/etc/hadoop-{{ env_name }}/hadoop-metrics.properties dest=/etc/hbase-{{ env_name }}/hadoop-metrics.properties
  when: not hbase_standalone

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hadoop-metrics.properties
  file: state=link src=/etc/hbase-{{ env_name }}/hadoop-metrics.properties dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/hadoop-metrics.properties
  when: not hbase_standalone

- name: put /etc/hbase-{{ env_name }}/jmxremote.access
  template: src=jmxremote.access dest=/etc/hbase-{{ env_name }}/jmxremote.access owner=root group=root mode=0644 backup=yes

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/jmxremote.access
  file: state=link src=/etc/hbase-{{ env_name }}/jmxremote.access dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/jmxremote.access
  when: not hbase_standalone

- name: put /etc/hbase-{{ env_name }}/jmxremote.passwd
  template: src=jmxremote.passwd dest=/etc/hbase-{{ env_name }}/jmxremote.passwd owner={{ hadoop_user }} group={{ hadoop_user }} mode=0600 backup=yes

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/jmxremote.passwd
  file: state=link src=/etc/hbase-{{ env_name }}/jmxremote.passwd dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/jmxremote.passwd
  when: not hbase_standalone

- name: put "/etc/hbase-{{ env_name }}/jmx_prometheus_javaagent.yaml"
  template: src=jmx_prometheus_javaagent.yaml dest=/etc/hbase-{{ env_name }}/jmx_prometheus_javaagent.yaml owner=root group=root mode=0644 backup=yes

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/jmx_prometheus_javaagent.yaml
  file: state=link src=/etc/hbase-{{ env_name }}/jmx_prometheus_javaagent.yaml dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/conf/jmx_prometheus_javaagent.yaml
  when: not hbase_standalone

# - name: dirty start for a standalone hbase
#   shell: /opt/hbase/bin/start-hbase.sh
#   when: hbase_standalone
#   register: hbase_start
#   failed_when: "'master running as process' not in hbase_start.stdout and 'starting master' not in hbase_start.stdout"
#   changed_when: "'starting master' in hbase_start.stdout"

- name: put hbase-master eye config file
  template: src=hbase-standalone.rb dest=/etc/eye/hbase-standalone.rb owner=root group=root mode=0644 backup=yes
  when: hbase_standalone
  tags: eye

- name: load config in eye
  command: bash -c "source /usr/local/rvm/scripts/rvm && eye l /etc/eye/apps.eye"
  become: yes
  when: hbase_standalone
  tags: eye

- name: increase limits
  template: dest=/etc/security/limits.d/90-hbase.conf src=security/limits.d/90-hbase.conf backup=yes
  register: ulimit_conf
  tags: ulimit

- name: update ulimit
  lineinfile:
      dest: /etc/pam.d/common-session
      regexp: '^\s{0,}session\s{1,}required\s{1,}pam_limits.so'
      line: 'session required  pam_limits.so'
  tags: ulimit
  when: "ansible_os_family == 'Debian'"


# - name: update ulimit
#   shell: ulimit -n 65536
#   # sudo_user: hadoop
#   # when: ulimit_conf.changed
#   tags: ulimit

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/lib/native
  file: state=directory dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/lib/native

- name: create {{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/lib/native/Linux-amd64-64
  file: state=directory dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/lib/native/Linux-amd64-64

- name: make a link to libhadoop.so
  file: state=link src={{ hadoop_distr_prefix }}-{{ env_name }}-{{ hadoop_version }}/lib/native/libhadoop.so dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/lib/native/Linux-amd64-64/libhadoop.so
  when: not hbase_standalone

- name: make a link to libhdfs.so
  file: state=link src={{ hadoop_distr_prefix }}-{{ env_name }}-{{ hadoop_version }}/lib/native/libhdfs.so dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/lib/native/Linux-amd64-64/libhdfs.so
  when: not hbase_standalone

- name: download the Prom JMX exporter
  get_url: url="https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.3.1/jmx_prometheus_javaagent-0.3.1.jar" dest={{ hbase_distr_prefix }}-{{ env_name }}-{{ hbase_version }}/lib/jmx_prometheus_javaagent-0.3.1.jar
